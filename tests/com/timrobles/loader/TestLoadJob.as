package com.timrobles.loader {    import com.timrobles.loader.events.LoadEvent;    import org.flexunit.asserts.assertTrue;    import org.flexunit.async.Async;    import flash.display.DisplayObject;    import flash.events.Event;    /**     * @author Tim Robles     */    public class TestLoadJob    {        //----------------------------------        //  Constants        //----------------------------------        public static const LARGE_JPG:String = "blah/load/aerofly.jpg";        public static const LARGE_JPG_SIZE:Number = 181428;        //--------------------------------------------------------------------------        //        //  Test Cases        //        //--------------------------------------------------------------------------		[Test]        public function testInstantiation():void         {            var filepath:String = "some_path.xml";            var job:ILoadJob = new LoadJob(filepath);            assertTrue("Expected getPath() to be '" + filepath + "', instead got '" + job.getPath() + "'", job.getPath() == filepath);        }		[Ignore("Need to hook up a new asset")]		[Test(async)]        public function testLoad():void         {            var job:ILoadJob = new LoadJob(LARGE_JPG);            job.addEventListener(Event.COMPLETE, Async.asyncHandler(this, testLoadComplete, 1500));            job.load();        }        		[Ignore("Need to hook up a new asset")]		[Test(async)]        public function testGetFilesize():void         {            var job:ILoadJob = new LoadJob(LARGE_JPG);            job.addEventListener(LoadEvent.FILESIZE, Async.asyncHandler(this, testGetFileSizeHandler, 1500));            var result:Number = job.getFilesize();            assertTrue("Expected job.getFilesize() to be -1, instead got: " + result, result == -1);        }        //--------------------------------------------------------------------------        //        //  Event Handlers        //        //--------------------------------------------------------------------------        protected function testLoadComplete( event:Event ):void         {			            var job:ILoadJob = ILoadJob(event.currentTarget);            assertTrue("Expected progress to be 1, got " + job.getProgress(), job.getProgress() == 1);            assertTrue("Expected getData() not to be null.", job.getData() != null);            assertTrue("Expected getData() to be displayObject.", job.getData() is DisplayObject);        }        protected function testGetFileSizeHandler( loadEvent:LoadEvent ):void         {			            var job:ILoadJob = ILoadJob(loadEvent.currentTarget);            job.removeEventListener(LoadEvent.FILESIZE, testGetFileSizeHandler);            var filesize:Number = job.getFilesize();            assertTrue("Expected filesize not to be -1.", filesize != -1);            assertTrue("Expected bytesLoaded ( " + job.getBytesLoaded() + " not to equal filesize ( " + filesize + " )", job.getBytesLoaded() != filesize);            assertTrue("Expected bytesLoaded to be less than bytesTotal ( " + job.getBytesLoaded() + ", " + job.getBytesTotal() + " )", job.getBytesLoaded() < job.getBytesTotal());            assertTrue("Expected filesize to be: " + LARGE_JPG_SIZE + ", not " + filesize, filesize == LARGE_JPG_SIZE);        }    }}