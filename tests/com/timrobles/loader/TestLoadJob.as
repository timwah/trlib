package com.timrobles.loader {    import flash.display.DisplayObject;    import flash.events.Event;        import com.timrobles.loader.events.LoadEvent;        import flexunit.framework.TestCase;    import flexunit.framework.TestSuite;        /**     * @author Tim Robles     */    public class TestLoadJob extends TestCase {    	    	//----------------------------------    	//  Constants    	//----------------------------------    	    	public static const LARGE_JPG : String      = "assets/load/aerofly.jpg";    	public static const LARGE_JPG_SIZE : Number = 181428;    	        //--------------------------------------------------------------------------        //        //  Constructor        //        //--------------------------------------------------------------------------                public function TestLoadJob( methodName : String = null ) {        	        	super( methodName );        	        }	                //--------------------------------------------------------------------------        //        //  Test Suite        //        //--------------------------------------------------------------------------                public static function suite() : TestSuite {                    var ts : TestSuite = new TestSuite();            ts.addTest( new TestLoadJob( "testInstantiation" ) );            ts.addTest( new TestLoadJob( "testLoad" ) );            ts.addTest( new TestLoadJob( "testGetFilesize" ) );            return ts;                    }                //--------------------------------------------------------------------------        //        //  Test Cases        //        //--------------------------------------------------------------------------                public function testInstantiation() : void {                    var filepath : String = "some_path.xml";            var job : ILoadJob = new LoadJob( filepath );            assertTrue( "Expected getPath() to be '" + filepath + "', instead got '" + job.getPath() + "'", job.getPath() == filepath );        	        }                public function testLoad() : void {        	        	var job : ILoadJob = new LoadJob( LARGE_JPG );        	job.addEventListener( Event.COMPLETE, addAsync( testLoadComplete, 1500 ) );        	job.load();        	         }                public function testGetFilesize() : void {        	        	var job : ILoadJob = new LoadJob( LARGE_JPG );        	job.addEventListener( LoadEvent.FILESIZE, addAsync( testGetFileSizeHandler, 1500 ) );        	var result : Number = job.getFilesize();        	assertTrue( "Expected job.getFilesize() to be -1, instead got: " + result, result == -1 );        	        }                //--------------------------------------------------------------------------        //        //  Event Handlers        //        //--------------------------------------------------------------------------                protected function testLoadComplete( event : Event ) : void {						var job : ILoadJob = ILoadJob( event.currentTarget );			assertTrue( "Expected progress to be 1, got " + job.getProgress(), job.getProgress() == 1 );			assertTrue( "Expected getData() not to be null.", job.getData() != null );			assertTrue( "Expected getData() to be displayObject.", job.getData() is DisplayObject );			        }                protected function testGetFileSizeHandler( loadEvent : LoadEvent ) : void {						var job : ILoadJob = ILoadJob( loadEvent.currentTarget );			job.removeEventListener( LoadEvent.FILESIZE, testGetFileSizeHandler );			var filesize : Number = job.getFilesize();			assertTrue( "Expected filesize not to be -1.", filesize != -1 );			assertTrue( "Expected bytesLoaded ( " + job.getBytesLoaded() + " not to equal filesize ( " + filesize + " )", job.getBytesLoaded() != filesize );			assertTrue( "Expected bytesLoaded to be less than bytesTotal ( " + job.getBytesLoaded() + ", " + job.getBytesTotal() + " )", job.getBytesLoaded() < job.getBytesTotal() );			assertTrue( "Expected filesize to be: " + LARGE_JPG_SIZE + ", not " + filesize, filesize == LARGE_JPG_SIZE );			        }            }    }