package com.timrobles.models.selection {    import flash.events.Event;    import flash.events.EventDispatcher;        import com.timrobles.util.MathUtil;        /**	 * @author Tim Robles	 */	public class SelectionModel extends EventDispatcher	{		//----------------------------------		//  Protected Members		//----------------------------------				protected var circular:Boolean = true;		protected var _direction:int = 0;		protected var _items:Array;		protected var _index:uint;				//--------------------------------------------------------------------------		//		//  Constructor		//		//--------------------------------------------------------------------------				public function SelectionModel(items:Array, defaultSelection:uint = 0, circular:Boolean = true) 		{			this.circular = circular;			if (defaultSelection >= items.length)				defaultSelection = 0;			_items = items;				_index = defaultSelection;		}				//--------------------------------------------------------------------------		//		//  Public Methods		//		//--------------------------------------------------------------------------				public function next():void		{			_direction = 1;			var updatedIndex:uint = circular ? (_index + 1) % _items.length : Math.max(_index + 1, _items.length - 1);			if (updatedIndex != _index)			{				_index = updatedIndex;				dispatchEvent(new Event(Event.SELECT));			}		}				public function previous():void		{			_direction = -1;			var updatedIndex:uint = circular ? MathUtil.mod(_index - 1, _items.length) : Math.min(_index - 1, 0);			if (updatedIndex != _index)			{				_index = updatedIndex;				dispatchEvent(new Event(Event.SELECT)); 			}		}				public function select(value:uint):Boolean		{			if ((value != _index) && (value < _items.length))			{				_index = value;				dispatchEvent(new Event(Event.SELECT));				return true;			}			return false;		}						public function get direction():int		{			return _direction;		}				public function get index():uint		{			return _index;		}				public function get items():Array		{			return _items;		}	}}