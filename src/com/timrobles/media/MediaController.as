package com.timrobles.media {    import flash.events.EventDispatcher;        import com.timrobles.media.events.MediaEvent;    import com.timrobles.media.model.IMediaModel;        /**     * @author Tim Robles     */    public class MediaController extends EventDispatcher implements IMediaController    {    	//----------------------------------    	//  Protected Members    	//----------------------------------    	    	protected var mediaModel:IMediaModel;    	    	//--------------------------------------------------------------------------    	//    	//  Constructor    	//    	//--------------------------------------------------------------------------    	    	public function MediaController(mediaModel:IMediaModel)     	{            this.mediaModel = mediaModel;            mediaModel.addEventListener(MediaEvent.BUFFER_EMPTY, mediaEventHandler);            mediaModel.addEventListener(MediaEvent.BUFFER_FLUSH, mediaEventHandler);            mediaModel.addEventListener(MediaEvent.BUFFER_FULL, mediaEventHandler);            mediaModel.addEventListener(MediaEvent.LOAD, mediaEventHandler);            mediaModel.addEventListener(MediaEvent.METADATA, mediaEventHandler);            mediaModel.addEventListener(MediaEvent.PLAYBACK_START, mediaEventHandler);            mediaModel.addEventListener(MediaEvent.PLAYBACK_STOP, mediaEventHandler);            mediaModel.addEventListener(MediaEvent.PLAYBACK_COMPLETE, mediaEventHandler);            mediaModel.addEventListener(MediaEvent.READY, mediaEventHandler);            mediaModel.addEventListener(MediaEvent.SCRUB_START, mediaEventHandler);            mediaModel.addEventListener(MediaEvent.SCRUB_STOP, mediaEventHandler);        }                //--------------------------------------------------------------------------        //        //  Public Methods        //        //--------------------------------------------------------------------------                public function load(url:String, autoPlay:Boolean = true):void        {        	mediaModel.load(url, autoPlay);        }                public function play():void        {        	mediaModel.play();        }                public function pause():void        {        	mediaModel.pause();        }                public function togglePause():void        {        	mediaModel.togglePause();        }                public function stop():void        {        	mediaModel.stop();        }                public function close():void        {        	mediaModel.close();        }                public function getMetadata():Object        {        	return mediaModel.getMetadata();        }                public function getBytesLoaded():uint        {        	return mediaModel.getBytesLoaded();        }                public function getBytesTotal():uint        {        	return mediaModel.getBytesTotal();        }                public function get position():Number        {        	return mediaModel.position;        }                public function get time():Number        {        	return mediaModel.time;        }                public function get volume():Number        {        	return mediaModel.volume;        }                public function get panning():Number        {        	return mediaModel.panning;        }                public function get bufferTime():Number        {        	return mediaModel.bufferTime;        }                public function get url():String        {        	return mediaModel.url;        }                public function get playing():Boolean        {        	return mediaModel.playing;        }                public function get scrubbing():Boolean        {        	return mediaModel.scrubbing;        }                public function get initialized():Boolean        {        	return mediaModel.initialized;        }                public function set position(value:Number):void        {        	mediaModel.position = value;        }                public function set time(value:Number):void        {        	mediaModel.time = value;        }                public function set volume(value:Number):void        {        	mediaModel.volume = value;        }                public function set panning(value:Number):void        {        	mediaModel.panning = value;        }                public function set bufferTime(value:Number):void        {        	mediaModel.bufferTime = value;        }                public function set url(value:String):void        {        	mediaModel.url = value;        }                public function set playing(value:Boolean):void        {        	mediaModel.playing = value;        }                public function set scrubbing(value:Boolean):void        {        	mediaModel.scrubbing = value;        }                //--------------------------------------------------------------------------        //        //  Event Handlers        //        //--------------------------------------------------------------------------                protected function mediaEventHandler(mediaEvent:MediaEvent):void        {        	dispatchEvent(new MediaEvent(mediaEvent.type));        }    }}