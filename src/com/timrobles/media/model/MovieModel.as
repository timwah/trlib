package com.timrobles.media.model {    import flash.display.DisplayObject;    import flash.display.Loader;    import flash.display.MovieClip;    import flash.events.Event;    import flash.net.URLRequest;        import com.timrobles.logger.Logger;    import com.timrobles.media.events.MediaEvent;        /**     * @author Tim Robles     */    public class MovieModel extends VisualMediaModel    {    	//----------------------------------    	//  Constants    	//----------------------------------    	    	public static const DEFAULT_FRAMERATE:Number = 30;    	    	//----------------------------------    	//  Protected Members    	//----------------------------------    	    	protected var loader:Loader;    	    	//--------------------------------------------------------------------------    	//    	//  Constructor    	//    	//--------------------------------------------------------------------------    	    	public function MovieModel()     	{    		super();    		loader = new Loader();    		loader.contentLoaderInfo.addEventListener(Event.COMPLETE, completeHandler);    		loader.contentLoaderInfo.addEventListener(Event.INIT, initHandler);    	}    	    	//--------------------------------------------------------------------------    	//    	//  Public Methods    	//    	//--------------------------------------------------------------------------    	        override public function load(url:String, autoPlay:Boolean = true):void        {        	super.load(url, autoPlay);        	initialized = false;            loader.load(new URLRequest(url));            dispatchEvent(new MediaEvent(MediaEvent.LOAD));        }                override public function play():void        {        	Logger.info("playing clip!");        	super.play();        	if (initialized)        	{        		mediaClip.play();        	}        }                override public function pause():void        {        	super.pause();        	mediaClip.stop();        }                override public function close():void        {        	pause();        	initialized = false;        }                override public function set position(value:Number):void        {        	if (!metadata)        		return;        	mediaClip.gotoAndStop(Math.floor(value * mediaClip.totalFrames) + 1);        }                override public function get position():Number        {        	if (!metadata)        		return -1;        	return (mediaClip.currentFrame - 1) / (mediaClip.totalFrames - 1);        }                override public function set time(value:Number):void        {        	if (!metadata)        		return;        	position = value / metadata.duration;         }                override public function get time():Number        {        	if (!metadata)        		return 0;        	return position * metadata.duration;        }                override public function loadClip(value:DisplayObject, autoPlay:Boolean = true):void        {        	super.loadClip(value, autoPlay);        	initializeClip(value as MovieClip);        	prepareClip(value as MovieClip);        }                override public function getBytesLoaded():uint        {        	return loader.contentLoaderInfo.bytesLoaded;        }                override public function getBytesTotal():uint        {        	return loader.contentLoaderInfo.bytesTotal;        }                //--------------------------------------------------------------------------        //        //  Event Handlers        //        //--------------------------------------------------------------------------                protected function initHandler(event:Event):void        {        	initializeClip(MovieClip(loader.content));        }                protected function completeHandler(event:Event):void        {        	prepareClip(MovieClip(loader.content));        }                //--------------------------------------------------------------------------        //        //  Protected Methods        //        //--------------------------------------------------------------------------                protected function initializeClip(mc:MovieClip):void        {	        	initialized = true;        	metadata = {duration: mc.totalFrames / DEFAULT_FRAMERATE,        				width: mc.width,        				height: mc.height};        	dispatchEvent(new MediaEvent(MediaEvent.METADATA));        }                protected function prepareClip(mc:MovieClip):void        {        	while (mediaHolder.numChildren > 0)        		mediaHolder.removeChildAt(0);        	mediaHolder.addChild(mc);        	mediaClip.gotoAndStop(1);        	mediaClip.addFrameScript(mediaClip.totalFrames - 1, endReached);        	dispatchEvent(new MediaEvent(MediaEvent.READY));        	if (autoPlay)        		play();        }                protected function endReached():void        {			mediaClip.stop();			playing = false;			Logger.error("dispatching a complete event from the movie!");			dispatchEvent(new MediaEvent(MediaEvent.PLAYBACK_COMPLETE));        	        }                protected function get mediaClip():MovieClip        {        	return mediaHolder.getChildAt(0) as MovieClip;        }    }}