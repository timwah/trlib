package com.timrobles.media.model {    import flash.events.Event;    import flash.events.EventDispatcher;        import com.timrobles.media.events.MediaEvent;        /**     * @author Tim Robles     */    public class MediaModel extends EventDispatcher implements IMediaModel    {    	//----------------------------------    	//  Protected Members    	//----------------------------------    	    	protected var autoPlay:Boolean = true;    	protected var metadata:Object;    	protected var wasPlayingOnScrub:Boolean = false;    	protected var _initialized:Boolean = false;    	protected var _playing:Boolean;    	protected var _scrubbing:Boolean = false;    	protected var _url:String;    	    	//--------------------------------------------------------------------------    	//    	//  Constructor    	//    	//--------------------------------------------------------------------------    	    	public function MediaModel()     	{    	}    	    	//--------------------------------------------------------------------------    	//    	//  Public Methods    	//    	//--------------------------------------------------------------------------    	        public function load(urlValue:String, autoPlay:Boolean = true):void        {            this.autoPlay = autoPlay;            url = urlValue;        }                public function play():void        {        	playing = true;        }                public function pause():void        {        	playing = false;        }                public function togglePause():void        {        	playing ? pause() : play();        }                // should this also rewind?        public function stop():void        {        	playing = false;        }                public function close():void        {        }                public function getMetadata():Object        {        	return metadata;        }                public function getBytesLoaded():uint        {        	return 0;        }                public function getBytesTotal():uint        {        	return 0;        }                //--------------------------------------------------------------------------        //        //  Getters & Setters        //        //--------------------------------------------------------------------------                public function get position():Number        {        	return 0;        }                public function get time():Number        {        	return 0;        }                public function get volume():Number        {        	return 0;        }                public function get panning():Number        {        	return 0;        }                public function get bufferTime():Number        {        	return 0;        }                public function get initialized():Boolean        {        	return _initialized;        }        public function set position(position:Number):void        {        }                public function set time(value:Number):void        {        }                public function set volume(value:Number):void        {        }                public function set panning(value:Number):void        {        }                public function set bufferTime(value:Number):void        {        }                 public function get url():String        {        	return _url;        }                public function set url(value:String):void        {        	if (value != _url)        	{        		_url = value;        		dispatchEvent(new Event(Event.CHANGE));            }        }                public function get playing():Boolean        {        	return _playing;        }                public function set playing(value:Boolean):void        {        	if (value != _playing)        	{        		_playing = value;        		dispatchEvent(new MediaEvent(_playing ? MediaEvent.PLAYBACK_START : MediaEvent.PLAYBACK_STOP));        	}        }		public function get scrubbing():Boolean		{			return _scrubbing;        		}				public function set scrubbing(value:Boolean):void		{			_scrubbing = value;			if (value)			{				wasPlayingOnScrub = playing;				pause();				dispatchEvent(new MediaEvent(MediaEvent.SCRUB_START));			}			else			{				if (wasPlayingOnScrub)					play();				dispatchEvent(new MediaEvent(MediaEvent.SCRUB_STOP));			}		}    }}